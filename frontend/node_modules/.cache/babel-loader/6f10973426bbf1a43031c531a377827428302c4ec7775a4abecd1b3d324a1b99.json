{"ast":null,"code":"var _jsxFileName = \"/Users/eunice/cs3219-ay2425s1-project-g26/peerprep/src/pages/QuestionPage.js\",\n  _s = $RefreshSig$();\n// src/pages/QuestionPage.js\nimport React, { useState, useEffect } from \"react\";\nimport QuestionTable from \"../components/QuestionTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    // Fetch or define your questions data here\n    // For example:\n    setQuestions([{\n      id: 1,\n      title: \"Two Sum\",\n      category: \"Array\",\n      complexity: \"Easy\"\n    }, {\n      id: 2,\n      title: \"Three Sum\",\n      category: \"Array\",\n      complexity: \"Medium\"\n    }, {\n      id: 3,\n      title: \"Longest Substring Without Repeating Characters\",\n      category: \"String\",\n      complexity: \"Medium\"\n    }, {\n      id: 4,\n      title: \"Merge Intervals\",\n      category: \"Array\",\n      complexity: \"Medium\"\n    }, {\n      id: 5,\n      title: \"Valid Parentheses\",\n      category: \"String\",\n      complexity: \"Easy\"\n    }, {\n      id: 6,\n      title: \"Binary Tree Inorder Traversal\",\n      category: \"Tree\",\n      complexity: \"Easy\"\n    }, {\n      id: 7,\n      title: \"Add Two Numbers\",\n      category: \"Linked List\",\n      complexity: \"Medium\"\n    }, {\n      id: 8,\n      title: \"Product of Array Except Self\",\n      category: \"Array\",\n      complexity: \"Medium\"\n    }, {\n      id: 9,\n      title: \"Search in Rotated Sorted Array\",\n      category: \"Array\",\n      complexity: \"Medium\"\n    }, {\n      id: 10,\n      title: \"Longest Palindromic Substring\",\n      category: \"String\",\n      complexity: \"Medium\"\n    }\n    // Add more question objects as needed\n    ]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionTable, {\n      questions: questions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionPage, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = QuestionPage;\nexport default QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","useState","useEffect","QuestionTable","jsxDEV","_jsxDEV","QuestionPage","_s","questions","setQuestions","id","title","category","complexity","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eunice/cs3219-ay2425s1-project-g26/peerprep/src/pages/QuestionPage.js"],"sourcesContent":["// src/pages/QuestionPage.js\nimport React, { useState, useEffect } from \"react\";\nimport QuestionTable from \"../components/QuestionTable\";\n\nconst QuestionPage = () => {\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    // Fetch or define your questions data here\n    // For example:\n    setQuestions([\n      {\n        id: 1,\n        title: \"Two Sum\",\n        category: \"Array\",\n        complexity: \"Easy\",\n      },\n      {\n        id: 2,\n        title: \"Three Sum\",\n        category: \"Array\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 3,\n        title: \"Longest Substring Without Repeating Characters\",\n        category: \"String\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 4,\n        title: \"Merge Intervals\",\n        category: \"Array\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 5,\n        title: \"Valid Parentheses\",\n        category: \"String\",\n        complexity: \"Easy\",\n      },\n      {\n        id: 6,\n        title: \"Binary Tree Inorder Traversal\",\n        category: \"Tree\",\n        complexity: \"Easy\",\n      },\n      {\n        id: 7,\n        title: \"Add Two Numbers\",\n        category: \"Linked List\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 8,\n        title: \"Product of Array Except Self\",\n        category: \"Array\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 9,\n        title: \"Search in Rotated Sorted Array\",\n        category: \"Array\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 10,\n        title: \"Longest Palindromic Substring\",\n        category: \"String\",\n        complexity: \"Medium\",\n      },\n      // Add more question objects as needed\n    ]);\n  }, []);\n\n  return (\n    <div>\n      <h1></h1>\n      <QuestionTable questions={questions} />\n    </div>\n  );\n};\n\nexport default QuestionPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd;IACA;IACAO,YAAY,CAAC,CACX;MACEC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,SAAS;MAChBC,QAAQ,EAAE,OAAO;MACjBC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,WAAW;MAClBC,QAAQ,EAAE,OAAO;MACjBC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,gDAAgD;MACvDC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,iBAAiB;MACxBC,QAAQ,EAAE,OAAO;MACjBC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,mBAAmB;MAC1BC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,+BAA+B;MACtCC,QAAQ,EAAE,MAAM;MAChBC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,iBAAiB;MACxBC,QAAQ,EAAE,aAAa;MACvBC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,8BAA8B;MACrCC,QAAQ,EAAE,OAAO;MACjBC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,CAAC;MACLC,KAAK,EAAE,gCAAgC;MACvCC,QAAQ,EAAE,OAAO;MACjBC,UAAU,EAAE;IACd,CAAC,EACD;MACEH,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,+BAA+B;MACtCC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE;IACd;IACA;IAAA,CACD,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTb,OAAA,CAACF,aAAa;MAACK,SAAS,EAAEA;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACX,EAAA,CA7EID,YAAY;AAAAa,EAAA,GAAZb,YAAY;AA+ElB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}