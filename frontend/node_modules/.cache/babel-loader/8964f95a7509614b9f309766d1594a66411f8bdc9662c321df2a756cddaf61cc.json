{"ast":null,"code":"var _jsxFileName = \"/Users/eunice/cs3219-ay2425s1-project-g26/frontend/src/pages/QuestionPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../components/DialogForm.css\";\nimport AddQuestionButton from \"../components/AddQuestionButton\";\nimport AddQuestionForm from \"../components/AddQuestionForm\";\nimport Dialog from \"../components/Dialog\";\nimport EditQuestionForm from \"../components/EditQuestionForm\";\nimport QuestionTable from \"../components/QuestionTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [dialogForm, setDialogForm] = useState(null);\n  const dialogRef = useRef(null);\n  useEffect(() => {\n    // Fetch or define questions data here\n    // Linkage to mongoDB here maybe\n    setQuestions([{\n      id: 1,\n      title: \"Two Sum\",\n      category: \"Array\",\n      complexity: \"Easy\"\n    }, {\n      id: 2,\n      title: \"Three Sum\",\n      category: \"Array\",\n      complexity: \"Medium\"\n    }, {\n      id: 3,\n      title: \"Longest Substring Without Repeating Characters\",\n      category: \"String\",\n      complexity: \"Medium\"\n    }, {\n      id: 4,\n      title: \"Merge Intervals\",\n      category: \"Array\",\n      complexity: \"Medium\"\n    }, {\n      id: 5,\n      title: \"Valid Parentheses\",\n      category: \"String\",\n      complexity: \"Easy\"\n    }, {\n      id: 6,\n      title: \"Binary Tree Inorder Traversal\",\n      category: \"Tree\",\n      complexity: \"Easy\"\n    }, {\n      id: 7,\n      title: \"Add Two Numbers\",\n      category: \"Linked List\",\n      complexity: \"Medium\"\n    }, {\n      id: 8,\n      title: \"Product of Array Except Self\",\n      category: \"Array\",\n      complexity: \"Medium\"\n    }, {\n      id: 9,\n      title: \"Search in Rotated Sorted Array\",\n      category: \"Array\",\n      complexity: \"Medium\"\n    }, {\n      id: 10,\n      title: \"Longest Palindromic Substring\",\n      category: \"String\",\n      complexity: \"Medium\"\n    }]);\n  }, []);\n  function toggleDialog() {\n    if (!dialogRef.current) {\n      return;\n    }\n    dialogRef.current.hasAttribute(\"open\") ? dialogRef.current.close() : dialogRef.current.showModal();\n  }\n  function handleAddQuestion(newQuestion) {\n    toggleDialog();\n    setQuestions(prevQuestions => [...prevQuestions, {\n      id: prevQuestions.length + 1,\n      ...newQuestion\n    }]);\n  }\n  function handleEditQuestion(question) {\n    setDialogForm(/*#__PURE__*/_jsxDEV(EditQuestionForm, {\n      question: question,\n      onUpdate: handleUpdateQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }, this));\n    toggleDialog();\n  }\n  function handleUpdateQuestion(updatedQuestion) {\n    setQuestions(prevQuestions => prevQuestions.map(q => q.id === updatedQuestion.id ? updatedQuestion : q));\n    toggleDialog();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: \"70px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddQuestionButton, {\n      onClick: () => {\n        setDialogForm(/*#__PURE__*/_jsxDEV(AddQuestionForm, {\n          onAdd: handleAddQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 23\n        }, this));\n        toggleDialog();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionTable, {\n      questions: questions,\n      onEdit: handleEditQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      toggleDialog: toggleDialog,\n      ref: dialogRef,\n      children: dialogForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionPage, \"jdkeNO7DK2j/TDbzACK7pB6G1kE=\");\n_c = QuestionPage;\nexport default QuestionPage;\nvar _c;\n$RefreshReg$(_c, \"QuestionPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AddQuestionButton","AddQuestionForm","Dialog","EditQuestionForm","QuestionTable","jsxDEV","_jsxDEV","QuestionPage","_s","questions","setQuestions","dialogForm","setDialogForm","dialogRef","id","title","category","complexity","toggleDialog","current","hasAttribute","close","showModal","handleAddQuestion","newQuestion","prevQuestions","length","handleEditQuestion","question","onUpdate","handleUpdateQuestion","fileName","_jsxFileName","lineNumber","columnNumber","updatedQuestion","map","q","style","paddingTop","children","onClick","onAdd","onEdit","ref","_c","$RefreshReg$"],"sources":["/Users/eunice/cs3219-ay2425s1-project-g26/frontend/src/pages/QuestionPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"../components/DialogForm.css\";\nimport AddQuestionButton from \"../components/AddQuestionButton\";\nimport AddQuestionForm from \"../components/AddQuestionForm\";\nimport Dialog from \"../components/Dialog\";\nimport EditQuestionForm from \"../components/EditQuestionForm\";\nimport QuestionTable from \"../components/QuestionTable\";\n\nconst QuestionPage = () => {\n  const [questions, setQuestions] = useState([]);\n  const [dialogForm, setDialogForm] = useState(null);\n  const dialogRef  = useRef(null);\n\n  useEffect(() => {\n      // Fetch or define questions data here\n      // Linkage to mongoDB here maybe\n    setQuestions([\n      {\n        id: 1,\n        title: \"Two Sum\",\n        category: \"Array\",\n        complexity: \"Easy\",\n      },\n      {\n        id: 2,\n        title: \"Three Sum\",\n        category: \"Array\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 3,\n        title: \"Longest Substring Without Repeating Characters\",\n        category: \"String\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 4,\n        title: \"Merge Intervals\",\n        category: \"Array\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 5,\n        title: \"Valid Parentheses\",\n        category: \"String\",\n        complexity: \"Easy\",\n      },\n      {\n        id: 6,\n        title: \"Binary Tree Inorder Traversal\",\n        category: \"Tree\",\n        complexity: \"Easy\",\n      },\n      {\n        id: 7,\n        title: \"Add Two Numbers\",\n        category: \"Linked List\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 8,\n        title: \"Product of Array Except Self\",\n        category: \"Array\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 9,\n        title: \"Search in Rotated Sorted Array\",\n        category: \"Array\",\n        complexity: \"Medium\",\n      },\n      {\n        id: 10,\n        title: \"Longest Palindromic Substring\",\n        category: \"String\",\n        complexity: \"Medium\",\n      },\n    ]);\n  }, []);\n\n  function toggleDialog() {\n    if (!dialogRef.current) {\n      return;\n    }\n\n    dialogRef.current.hasAttribute(\"open\")\n      ? dialogRef.current.close()\n      : dialogRef.current.showModal();\n  }\n\n  function handleAddQuestion(newQuestion) {\n    toggleDialog();\n\n    setQuestions((prevQuestions) => [\n      ...prevQuestions,\n      { id: prevQuestions.length + 1, ...newQuestion },\n    ]);\n  }\n\n  function handleEditQuestion(question) {\n    setDialogForm(<EditQuestionForm question={question} onUpdate={handleUpdateQuestion} />);\n    toggleDialog();\n  }\n\n  function handleUpdateQuestion(updatedQuestion) {\n    setQuestions((prevQuestions) =>\n      prevQuestions.map((q) => (q.id === updatedQuestion.id ? updatedQuestion : q))\n    );\n    toggleDialog();\n  }\n\n  return (\n    <div style={{ paddingTop: \"70px\" }}>\n      <h1></h1>\n      <AddQuestionButton onClick={() => {\n        setDialogForm(<AddQuestionForm onAdd={handleAddQuestion} />);\n        toggleDialog();\n    \n      }} />\n      <QuestionTable questions={questions} onEdit={handleEditQuestion} />\n      <Dialog toggleDialog={toggleDialog} ref={dialogRef}>\n          {dialogForm}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default QuestionPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}