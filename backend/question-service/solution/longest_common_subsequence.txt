# Python code
def solution(text1, text2):
  n=len(text1)
  m=len(text2)
  dp=[[0]*(m+1) for _ in range(n+1)]
  for r in range(1,n+1):
      for c in range(1,m+1):
          if text1[r-1]==text2[c-1]:
              dp[r][c]=1+dp[r-1][c-1]
          else:
              dp[r][c]=max(dp[r-1][c],dp[r][c-1])
  return dp[-1][-1]
    

// Java code
class Solution {
  public static int solution(String text1, String text2) {
    String a = text1;
    String b = text2;
    int m=a.length();
    int n=b.length();
    int [][]dp=new int[m+1][n+1];
    for(int i=0;i<m+1;i++){
        for(int j=0;j<n+1;j++){
            if(i==0||j==0){
                 dp[i][j]=0;
            }
        }
    }
    for(int i=1;i<m+1;i++){
        for(int j=1;j<n+1;j++){
            if(a.charAt(i-1)==b.charAt(j-1)){
                dp[i][j]=dp[i-1][j-1]+1;
            }
            else{
                dp[i][j]=Math.max(dp[i][j-1],dp[i-1][j]);
            }
        }
    }
    return dp[m][n];
  }
}   
